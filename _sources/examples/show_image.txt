
.. _show_image:


Draw an Image
=============
This example shows how mpld3 can display images using plt.imshow()


.. raw:: html
    
    
    
    
    
    
        <style>
    
    
        div#figureed2931d7b5e04e15aad5f3dc021604dd
        .axesbg{
            fill: #FFFFFF;
        }
    
    
    
    div#figureed2931d7b5e04e15aad5f3dc021604dd
    .axis line, .axis path {
        shape-rendering: crispEdges;
        stroke: black;
        fill: none;
    }
    
    div#figureed2931d7b5e04e15aad5f3dc021604dd
    .axis text {
        font-family: sans-serif;
        font-size: 12.0px;
        fill: black;
        stroke: none;
    }
    
    
    
    div#figureed2931d7b5e04e15aad5f3dc021604dd
    .axis line, .axis path {
        shape-rendering: crispEdges;
        stroke: black;
        fill: none;
    }
    
    div#figureed2931d7b5e04e15aad5f3dc021604dd
    .axis text {
        font-family: sans-serif;
        font-size: 12.0px;
        fill: black;
        stroke: none;
    }
    
    
    
    div#figureed2931d7b5e04e15aad5f3dc021604dd
    .axes1
    image.imagecc162348351444b2b9ede7c043e2d679 {
       opacity: None;
    }
    
    
    
    div#figureed2931d7b5e04e15aad5f3dc021604dd
    text.texte615c85469804ed8b35203e605f819d3 {
       font-size : 12.0px;
       fill : #000000;
       opacity : 1;
    }
    
    
    
    div#figureed2931d7b5e04e15aad5f3dc021604dd
    text.text4cb817d10a6c4957b0789109d34b8e29 {
       font-size : 12.0px;
       fill : #000000;
       opacity : 1;
    }
    
    
    
    div#figureed2931d7b5e04e15aad5f3dc021604dd
    text.text6875faf562f245cab69c8a1b89b67497 {
       font-size : 20.0px;
       fill : #000000;
       opacity : 1;
    }
    
    
    
    
    
        div#figureed2931d7b5e04e15aad5f3dc021604dd
        .axesbg{
            fill: #FFFFFF;
        }
    
    
    
    div#figureed2931d7b5e04e15aad5f3dc021604dd
    .axis line, .axis path {
        shape-rendering: crispEdges;
        stroke: black;
        fill: none;
    }
    
    div#figureed2931d7b5e04e15aad5f3dc021604dd
    .axis text {
        font-family: sans-serif;
        font-size: 11px;
        fill: black;
        stroke: none;
    }
    
    
    
    div#figureed2931d7b5e04e15aad5f3dc021604dd
    .axis line, .axis path {
        shape-rendering: crispEdges;
        stroke: black;
        fill: none;
    }
    
    div#figureed2931d7b5e04e15aad5f3dc021604dd
    .axis text {
        font-family: sans-serif;
        font-size: 12.0px;
        fill: black;
        stroke: none;
    }
    
    
    
    
    
    div#figureed2931d7b5e04e15aad5f3dc021604dd
    text.text1c392d122b544bccbab9b339b049a52e {
       font-size : 12.0px;
       fill : #000000;
       opacity : 1;
    }
    
    
    
    div#figureed2931d7b5e04e15aad5f3dc021604dd
    text.text8ee936c5022142e29c193e1984599be3 {
       font-size : 12.0px;
       fill : #000000;
       opacity : 1;
    }
    
    
    
    div#figureed2931d7b5e04e15aad5f3dc021604dd
    text.text24a649aaddb2429bbcb560acd688e37f {
       font-size : 14.4px;
       fill : #000000;
       opacity : 1;
    }
    
    
    
    
    
        </style>
    
    
    
        <div id='figureed2931d7b5e04e15aad5f3dc021604dd'>
        </div>
        <script type="text/javascript">
        var create_figed2931d7b5e04e15aad5f3dc021604dd = function(d3, undefined){
    
    
        function Figure(figid, width, height){
          this.figid = figid;
          this.root = d3.select(figid);
          this.width = width;
          this.height = height;
          this.axes = [];
        }
    
        Figure.prototype.draw = function(){
          this.canvas = this.root.append('svg:svg')
                                     .attr('class', 'figure')
                                     .attr('width', this.width)
                                     .attr('height', this.height);
          for (var i=0; i<this.axes.length; i++){
            this.axes[i].draw();
          }
        };
    
        Figure.prototype.reset = function(duration){
          duration = (typeof duration !== 'undefined') ? duration : 750;
          for (var i=0; i<this.axes.length; i++){
            this.axes[i].prep_reset();
          }
    
          var transition = function(t){
            for (var i=0; i<this.axes.length; i++){
              this.axes[i].xdom(this.axes[i].xdom.domain(this.axes[i].ix(t)));
              this.axes[i].ydom(this.axes[i].ydom.domain(this.axes[i].iy(t)));
    
              // don't propagate: this will be done as part of the loop.
              this.axes[i].zoomed(false);
            }
          }.bind(this)
    
          d3.transition().duration(duration)
                         .tween("zoom", function(){return transition;});
    
          for (var i=0; i<this.axes.length; i++){
            this.axes[i].finalize_reset();
          }
        };
    
    
    
        function Axes(fig, bbox,
                      xlim, ylim,
                      xscale, yscale,
                      xdomain, ydomain,
                      xgridOn, ygridOn,
                      axclass, clipid,
                      zoomable){
          this.axnum = fig.axes.length;
          fig.axes.push(this);
    
          this.fig = fig;
          this.bbox = bbox;
          this.xlim = xlim;
          this.ylim = ylim;
          this.xdomain = xdomain;
          this.ydomain = ydomain;
          this.xscale = xscale;
          this.yscale = yscale;
          this.xgridOn = xgridOn;
          this.ygridOn = ygridOn;
          this.axclass = (typeof axclass !== 'undefined') ? axclass : "axes";
          this.clipid = (typeof clipid != 'undefined') ? clipid : "clip";
          this.zoomable = zoomable;
    
          this.sharex = [];
          this.sharey = [];
          this.elements = [];
    
          this.position = [this.bbox[0] * this.fig.width,
                           (1 - this.bbox[1] - this.bbox[3]) * this.fig.height];
          this.width = bbox[2] * this.fig.width;
          this.height = bbox[3] * this.fig.height;
    
          if(this.xscale === 'log'){
            this.xdom = d3.scale.log();
          }else if(this.xscale === 'date'){
            this.xdom = d3.time.scale();
          }else{
            this.xdom = d3.scale.linear();
          }
    
          if(this.yscale === 'log'){
            this.ydom = d3.scale.log();
          }else if(this.yscale === 'date'){
            this.ydom = d3.time.scale();
          }else{
            this.ydom = d3.scale.linear();
          }
    
          this.xdom.domain(this.xdomain)
                .range([0, this.width]);
    
          this.ydom.domain(this.ydomain)
                .range([this.height, 0]);
    
          if(this.xscale === 'date'){
             this.xmap = d3.time.scale()
                               .domain(this.xdomain)
                               .range(this.xlim);
             this.x = function(x){return this.xdom(this.xmap.invert(x));}
          }else if(this.xscale === 'log'){
             this.xmap = this.xdom;
             this.x = this.xdom;
          }else{
             this.xmap = this.xdom;
             this.x = this.xdom;
          }
    
          if(this.yscale === 'date'){
             this.ymap = d3.time.scale()
                                  .domain(this.ydomain)
                                  .range(this.ylim);
             this.y = function(y){return this.ydom(this.ymap.invert(y));}
          }else if(this.xscale === 'log'){
             this.ymap = this.ydom;
             this.y = this.ydom;
          }else{
             this.ymap = this.ydom;
             this.y = this.ydom;
          }
        }
    
        Axes.prototype.draw = function(){
          this.zoom = d3.behavior.zoom()
                              .x(this.xdom)
                              .y(this.ydom)
                              .on("zoom", this.zoomed.bind(this));
    
          this.baseaxes = this.fig.canvas.append("g")
                                 .attr('transform', 'translate('
                                                     + this.position[0] + ','
                                                     + this.position[1] + ')')
                                 .attr('width', this.width)
                                 .attr('height', this.height)
                                 .attr('class', "baseaxes");
    
          if(this.zoomable){
            this.baseaxes.call(this.zoom);
          }
    
          this.axesbg = this.baseaxes.append("svg:rect")
                                 .attr("width", this.width)
                                 .attr("height", this.height)
                                 .attr("class", "axesbg");
    
          this.clip = this.baseaxes.append("svg:clipPath")
                              .attr("id", this.clipid)
                              .append("svg:rect")
                                 .attr("x", 0)
                                 .attr("y", 0)
                                 .attr("width", this.width)
                                 .attr("height", this.height)
    
          this.axes = this.baseaxes.append("g")
                               .attr("class", this.axclass)
                               .attr("clip-path", "url(#" + this.clipid + ")");
    
          for(var i=0; i<this.elements.length; i++){
            this.elements[i].draw();
          }
        };
    
        Axes.prototype.zoomed = function(propagate){
          // propagate is a boolean specifying whether to propagate movements
          // to shared axes, specified by sharex and sharey.  Default is true.
          propagate = (typeof propagate == 'undefined') ? true : propagate;
    
          //console.log(this.zoom.translate());
          //console.log(this.zoom.scale());
          //console.log(this.zoom.x().domain());
          //console.log(this.zoom.y().domain());
    
          for(var i=0; i<this.elements.length; i++){
            this.elements[i].zoomed();
          }
    
          t = this.zoom.translate();
          s = this.zoom.scale();
          if(propagate){
            // update shared y axes
            for(var i=0; i<this.sharey.length; i++){
              ti = this.sharey[i].zoom.translate();
              this.sharey[i].zoom.translate([ti[0], t[1]]);
              this.sharey[i].zoom.scale(s);
            }
            // update shared x axes
            for(var i=0; i<this.sharex.length; i++){
              ti = this.sharex[i].zoom.translate();
              this.sharex[i].zoom.translate([t[0], ti[1]]);
              this.sharex[i].zoom.scale(s);
            }
            // render updates to shared x axes
            for(var i=0; i<this.sharey.length; i++){
              this.sharey[i].zoomed(false);
            }
            // render updates to shared y axes
            for(var i=0; i<this.sharex.length; i++){
              this.sharex[i].zoomed(false);
            }
          }
        };
    
        Axes.prototype.add_element = function(element){
          this.elements.push(element);
        };
    
        Axes.prototype.prep_reset = function(){
          // interpolate() does not work on dates, so we map dates to numbers,
          // interpolate the numbers, and then invert the map.
          // we use the same strategy for log, so the interpolation will be smooth.
          // There probably is a cleaner approach...
    
          if (this.xscale === 'date'){
            var start = this.xdom.domain();
            var end = this.xdomain;
            var interp = d3.interpolate(
                    [this.xmap(start[0]), this.xmap(start[1])],
                    [this.xmap(end[0]), this.xmap(end[1])]);
            this.ix = function(t){
              return [this.xmap.invert(interp(t)[0]),
                      this.xmap.invert(interp(t)[1])];
            }
          }else{
            this.ix = d3.interpolate(this.xdom.domain(), this.xlim);
          }
    
          if (this.yscale === 'date'){
            var start = this.ydom.domain();
            var end = this.ydomain;
            var interp = d3.interpolate(
                    [this.ymap(start[0]), this.ymap(start[1])],
                    [this.ymap(end[0]), this.ymap(end[1])]);
            this.iy = function(t){
              return [this.ymap.invert(interp(t)[0]),
                      this.ymap.invert(interp(t)[1])];
            }
          }else{
            this.iy = d3.interpolate(this.ydom.domain(), this.ylim);
          }
        }
    
        Axes.prototype.finalize_reset = function(){
          this.zoom.scale(1).translate([0, 0]);
        }
    
        Axes.prototype.reset = function(){
          this.prep_reset();
          d3.transition().duration(750).tween("zoom", function() {
            return function(t) {
              this.zoom.x(this.xdom.domain(this.ix(t)))
                       .y(this.ydom.domain(this.iy(t)));
              this.zoomed();
            };
          });
          this.finalize_reset();
        };
    
    
    
        function Axis(axes, position, nticks, tickvalues, tickformat){
          this.axes = axes;
          this.position = position;
          this.nticks = nticks;
          this.tickvalues = tickvalues;
          this.tickformat = tickformat;
          if (position == "bottom"){
            this.transform = "translate(0," + this.axes.height + ")";
            this.scale = this.axes.xdom;
            this.class = "x axis";
          }else if (position == "top"){
            this.transform = "translate(0,0)"
            this.scale = this.axes.xdom;
            this.class = "x axis";
          }else if (position == "left"){
            this.transform = "translate(0,0)";
            this.scale = this.axes.ydom;
            this.class = "y axis";
          }else{
            this.transform = "translate(" + this.axes.width + ",0)";
            this.scale = this.axes.ydom;
            this.class = "y axis";
          }
        }
    
        Axis.prototype.draw = function(){
          this.axis = d3.svg.axis()
                              .scale(this.scale)
                              .orient(this.position)
                              .ticks(this.nticks)
                              .tickValues(this.tickvalues)
                              .tickFormat(this.tickformat);
          this.elem = this.axes.baseaxes.append('g')
                            .attr("transform", this.transform)
                            .attr("class", this.class)
                            .call(this.axis);
        };
    
        Axis.prototype.zoomed = function(){
          this.elem.call(this.axis);
        };
    
    
    
        function Grid(axes, xy){
          this.axes = axes;
          this.class = xy + " grid"
          if(xy == "x"){
            this.transform = "translate(0," + this.axes.height + ")";
            this.position = "bottom";
            this.scale = this.axes.xdom;
            this.tickSize = -this.axes.height;
          }else{
            this.transform = "translate(0,0)";
            this.position = "left";
            this.scale = this.axes.ydom;
            this.tickSize = -this.axes.width;
          }
        }
    
        Grid.prototype.draw = function(){
          this.grid = d3.svg.axis()
                              .scale(this.scale)
                              .orient(this.position)
                              .tickSize(this.tickSize, 0, 0)
                              .tickFormat("");
          this.elem = this.axes.axes.append("g")
                              .attr("class", this.class)
                              .attr("transform", this.transform)
                              .call(this.grid);
        };
    
        Grid.prototype.zoomed = function(){
          this.elem.call(this.grid);
        };
    
    
    
        // This function constructs a mapped SVG path
        // from an input data array
        var construct_SVG_path = function(data, xmap, ymap){
           xmap = (typeof xmap !== 'undefined') ? xmap : function(x){return x;};
           ymap = (typeof ymap !== 'undefined') ? ymap : function(y){return y;};
           var result = "";
           for (var i=0;i<data.length;i++){
              result += data[i][0];
              if(data[i][0] == 'Z'){
                continue;
              }
              for (var j=0;j<data[i][1].length;j++){
                if(j % 2 == 0){
                   result += " " + xmap(data[i][1][j]);
                }else{
                   result += " " + ymap(data[i][1][j]);
                }
              }
              result += " ";
           }
           return result;
         };
    
    
          var figwidth = 8.0 * 80;
          var figheight = 6.0 * 80;
          var fig = new Figure("div#figureed2931d7b5e04e15aad5f3dc021604dd",
                               figwidth, figheight);
    
    
    
        var ax1 = new Axes(fig, [0.14499999999999991, 0.099999999999999978, 0.60000000000000009, 0.80000000000000004], [10.0, 20.0], [10.0, 20.0],
                                   "linear", "linear",
                                   [10.0, 20.0], [10.0, 20.0],
                                   false, false,
                                   "axes1",
                                   "cliped2931d7b5e04e15aad5f3dc021604dd1", true);
    
    
    
    // Add an Axis element
    ax1.add_element(new Axis(ax1, "bottom",
                                     6, null,
                                     null));
    
    
    
    // Add an Axis element
    ax1.add_element(new Axis(ax1, "left",
                                     6, null,
                                     null));
    
    
    
    // Add an Image element
    var imagecc162348351444b2b9ede7c043e2d679 = new function(){
      this.ax = ax1;
      this.data = "data:image/png;base64," + "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";
      this.extent = [10, 20, 10, 20];
      this.class = "imagecc162348351444b2b9ede7c043e2d679";
    
      this.draw = function(){
        this.image = this.ax.axes.append("svg:image")
            .attr('class', this.class)
            .attr("xlink:href", this.data)
            .attr("preserveAspectRatio", "none");
        this.zoomed();  // set the initial image location
      };
    
      this.zoomed = function(){
        this.image.attr("x", this.ax.x(this.extent[0]))
                  .attr("y", this.ax.y(this.extent[3]))
                  .attr("width", this.ax.x(this.extent[1])
                                  - this.ax.x(this.extent[0]))
                  .attr("height", this.ax.y(this.extent[2])
                                  - this.ax.y(this.extent[3]));
      };
    };
    ax1.add_element(imagecc162348351444b2b9ede7c043e2d679);
    
    
    
    
    
    
    
    
    
    
    
    
    // Add a text element
    ax1.add_element(new function(){
     this.position = [284.79999999999995, 437.55555555555554];
     this.rotation = -0.0;
     this.ax = ax1;
     this.text = "An Image";
    
     this.draw = function(){
    
       this.obj = this.ax.fig.canvas.append("text")
                      .attr("x", this.position[0])
                      .attr("y", this.ax.fig.height - this.position[1])
    
                      .attr("transform", "rotate(" + this.rotation + ","
                                      + this.position[0] + ","
                                      + (figheight - this.position[1]) + ")")
    
    
                      .attr("class", "text")
                      .text(this.text)
                      .attr("class", "text6875faf562f245cab69c8a1b89b67497")
                      .attr("style", "text-anchor: middle;" +
                                     "dominant-baseline: auto")
    
     }
    
     this.zoomed = function(){
    
     }
    });
    
    
    
    
    
    
        var ax2 = new Axes(fig, [0.78374999999999995, 0.099999999999999978, 0.029999987447134835, 0.80000000000000004], [0.0, 1.0], [-4.1842901280099966e-07, 1.0],
                                   "linear", "linear",
                                   [0.0, 1.0], [-4.1842901280099966e-07, 1.0],
                                   false, false,
                                   "axes2",
                                   "cliped2931d7b5e04e15aad5f3dc021604dd2", false);
    
    
    
    // Add an Axis element
    ax2.add_element(new Axis(ax2, "bottom",
                                     0, [],
                                     ""));
    
    
    
    // Add an Axis element
    ax2.add_element(new Axis(ax2, "right",
                                     10, [-4.1842901280099966e-07, 0.10014382707075781, 0.20028807257052844, 0.30043231807029902, 0.4005765635700696, 0.50072080906984018, 0.60086505456961092, 0.70100930006938156, 0.80115354556915208, 0.90129779106892272],
                                     null));
    
    
    
    // Add a Collection
    var coll277d4938076e405aa06f484ad23725be = new function(){
      this.ax = ax2;
      this.data = [{"p": [["M", [0.0, 0.0]], ["L", [1.0, 0.0]], ["L", [1.0, 0.00390625]], ["L", [0.0, 0.00390625]], ["L", [0.0, 0.0]]], "fc": "#00007F"}, {"p": [["M", [0.0, 0.00390625]], ["L", [1.0, 0.00390625]], ["L", [1.0, 0.0078125]], ["L", [0.0, 0.0078125]], ["L", [0.0, 0.00390625]]], "fc": "#000084"}, {"p": [["M", [0.0, 0.0078125]], ["L", [1.0, 0.0078125]], ["L", [1.0, 0.01171875]], ["L", [0.0, 0.01171875]], ["L", [0.0, 0.0078125]]], "fc": "#000088"}, {"p": [["M", [0.0, 0.01171875]], ["L", [1.0, 0.01171875]], ["L", [1.0, 0.015625]], ["L", [0.0, 0.015625]], ["L", [0.0, 0.01171875]]], "fc": "#00008D"}, {"p": [["M", [0.0, 0.015625]], ["L", [1.0, 0.015625]], ["L", [1.0, 0.01953125]], ["L", [0.0, 0.01953125]], ["L", [0.0, 0.015625]]], "fc": "#000091"}, {"p": [["M", [0.0, 0.01953125]], ["L", [1.0, 0.01953125]], ["L", [1.0, 0.0234375]], ["L", [0.0, 0.0234375]], ["L", [0.0, 0.01953125]]], "fc": "#000096"}, {"p": [["M", [0.0, 0.0234375]], ["L", [1.0, 0.0234375]], ["L", [1.0, 0.02734375]], ["L", [0.0, 0.02734375]], ["L", [0.0, 0.0234375]]], "fc": "#00009A"}, {"p": [["M", [0.0, 0.02734375]], ["L", [1.0, 0.02734375]], ["L", [1.0, 0.03125]], ["L", [0.0, 0.03125]], ["L", [0.0, 0.02734375]]], "fc": "#00009F"}, {"p": [["M", [0.0, 0.03125]], ["L", [1.0, 0.03125]], ["L", [1.0, 0.03515625]], ["L", [0.0, 0.03515625]], ["L", [0.0, 0.03125]]], "fc": "#0000A3"}, {"p": [["M", [0.0, 0.03515625]], ["L", [1.0, 0.03515625]], ["L", [1.0, 0.0390625]], ["L", [0.0, 0.0390625]], ["L", [0.0, 0.03515625]]], "fc": "#0000A8"}, {"p": [["M", [0.0, 0.0390625]], ["L", [1.0, 0.0390625]], ["L", [1.0, 0.04296875]], ["L", [0.0, 0.04296875]], ["L", [0.0, 0.0390625]]], "fc": "#0000AC"}, {"p": [["M", [0.0, 0.04296875]], ["L", [1.0, 0.04296875]], ["L", [1.0, 0.046875]], ["L", [0.0, 0.046875]], ["L", [0.0, 0.04296875]]], "fc": "#0000B1"}, {"p": [["M", [0.0, 0.046875]], ["L", [1.0, 0.046875]], ["L", [1.0, 0.05078125]], ["L", [0.0, 0.05078125]], ["L", [0.0, 0.046875]]], "fc": "#0000B6"}, {"p": [["M", [0.0, 0.05078125]], ["L", [1.0, 0.05078125]], ["L", [1.0, 0.0546875]], ["L", [0.0, 0.0546875]], ["L", [0.0, 0.05078125]]], "fc": "#0000BA"}, {"p": [["M", [0.0, 0.0546875]], ["L", [1.0, 0.0546875]], ["L", [1.0, 0.05859375]], ["L", [0.0, 0.05859375]], ["L", [0.0, 0.0546875]]], "fc": "#0000BF"}, {"p": [["M", [0.0, 0.05859375]], ["L", [1.0, 0.05859375]], ["L", [1.0, 0.0625]], ["L", [0.0, 0.0625]], ["L", [0.0, 0.05859375]]], "fc": "#0000C3"}, {"p": [["M", [0.0, 0.0625]], ["L", [1.0, 0.0625]], ["L", [1.0, 0.06640625]], ["L", [0.0, 0.06640625]], ["L", [0.0, 0.0625]]], "fc": "#0000C8"}, {"p": [["M", [0.0, 0.06640625]], ["L", [1.0, 0.06640625]], ["L", [1.0, 0.0703125]], ["L", [0.0, 0.0703125]], ["L", [0.0, 0.06640625]]], "fc": "#0000CC"}, {"p": [["M", [0.0, 0.0703125]], ["L", [1.0, 0.0703125]], ["L", [1.0, 0.07421875]], ["L", [0.0, 0.07421875]], ["L", [0.0, 0.0703125]]], "fc": "#0000D1"}, {"p": [["M", [0.0, 0.07421875]], ["L", [1.0, 0.07421875]], ["L", [1.0, 0.078125]], ["L", [0.0, 0.078125]], ["L", [0.0, 0.07421875]]], "fc": "#0000D5"}, {"p": [["M", [0.0, 0.078125]], ["L", [1.0, 0.078125]], ["L", [1.0, 0.08203125]], ["L", [0.0, 0.08203125]], ["L", [0.0, 0.078125]]], "fc": "#0000DA"}, {"p": [["M", [0.0, 0.08203125]], ["L", [1.0, 0.08203125]], ["L", [1.0, 0.0859375]], ["L", [0.0, 0.0859375]], ["L", [0.0, 0.08203125]]], "fc": "#0000DE"}, {"p": [["M", [0.0, 0.0859375]], ["L", [1.0, 0.0859375]], ["L", [1.0, 0.08984375]], ["L", [0.0, 0.08984375]], ["L", [0.0, 0.0859375]]], "fc": "#0000E3"}, {"p": [["M", [0.0, 0.08984375]], ["L", [1.0, 0.08984375]], ["L", [1.0, 0.09375]], ["L", [0.0, 0.09375]], ["L", [0.0, 0.08984375]]], "fc": "#0000E8"}, {"p": [["M", [0.0, 0.09375]], ["L", [1.0, 0.09375]], ["L", [1.0, 0.09765625]], ["L", [0.0, 0.09765625]], ["L", [0.0, 0.09375]]], "fc": "#0000EC"}, {"p": [["M", [0.0, 0.09765625]], ["L", [1.0, 0.09765625]], ["L", [1.0, 0.1015625]], ["L", [0.0, 0.1015625]], ["L", [0.0, 0.09765625]]], "fc": "#0000F1"}, {"p": [["M", [0.0, 0.1015625]], ["L", [1.0, 0.1015625]], ["L", [1.0, 0.10546875]], ["L", [0.0, 0.10546875]], ["L", [0.0, 0.1015625]]], "fc": "#0000F5"}, {"p": [["M", [0.0, 0.10546875]], ["L", [1.0, 0.10546875]], ["L", [1.0, 0.109375]], ["L", [0.0, 0.109375]], ["L", [0.0, 0.10546875]]], "fc": "#0000FA"}, {"p": [["M", [0.0, 0.109375]], ["L", [1.0, 0.109375]], ["L", [1.0, 0.11328125]], ["L", [0.0, 0.11328125]], ["L", [0.0, 0.109375]]], "fc": "#0000FE"}, {"p": [["M", [0.0, 0.11328125]], ["L", [1.0, 0.11328125]], ["L", [1.0, 0.1171875]], ["L", [0.0, 0.1171875]], ["L", [0.0, 0.11328125]]], "fc": "#0000FF"}, {"p": [["M", [0.0, 0.1171875]], ["L", [1.0, 0.1171875]], ["L", [1.0, 0.12109375]], ["L", [0.0, 0.12109375]], ["L", [0.0, 0.1171875]]], "fc": "#0000FF"}, {"p": [["M", [0.0, 0.12109375]], ["L", [1.0, 0.12109375]], ["L", [1.0, 0.125]], ["L", [0.0, 0.125]], ["L", [0.0, 0.12109375]]], "fc": "#0000FF"}, {"p": [["M", [0.0, 0.125]], ["L", [1.0, 0.125]], ["L", [1.0, 0.12890625]], ["L", [0.0, 0.12890625]], ["L", [0.0, 0.125]]], "fc": "#0000FF"}, {"p": [["M", [0.0, 0.12890625]], ["L", [1.0, 0.12890625]], ["L", [1.0, 0.1328125]], ["L", [0.0, 0.1328125]], ["L", [0.0, 0.12890625]]], "fc": "#0004FF"}, {"p": [["M", [0.0, 0.1328125]], ["L", [1.0, 0.1328125]], ["L", [1.0, 0.13671875]], ["L", [0.0, 0.13671875]], ["L", [0.0, 0.1328125]]], "fc": "#0008FF"}, {"p": [["M", [0.0, 0.13671875]], ["L", [1.0, 0.13671875]], ["L", [1.0, 0.140625]], ["L", [0.0, 0.140625]], ["L", [0.0, 0.13671875]]], "fc": "#000CFF"}, {"p": [["M", [0.0, 0.140625]], ["L", [1.0, 0.140625]], ["L", [1.0, 0.14453125]], ["L", [0.0, 0.14453125]], ["L", [0.0, 0.140625]]], "fc": "#0010FF"}, {"p": [["M", [0.0, 0.14453125]], ["L", [1.0, 0.14453125]], ["L", [1.0, 0.1484375]], ["L", [0.0, 0.1484375]], ["L", [0.0, 0.14453125]]], "fc": "#0014FF"}, {"p": [["M", [0.0, 0.1484375]], ["L", [1.0, 0.1484375]], ["L", [1.0, 0.15234375]], ["L", [0.0, 0.15234375]], ["L", [0.0, 0.1484375]]], "fc": "#0018FF"}, {"p": [["M", [0.0, 0.15234375]], ["L", [1.0, 0.15234375]], ["L", [1.0, 0.15625]], ["L", [0.0, 0.15625]], ["L", [0.0, 0.15234375]]], "fc": "#001CFF"}, {"p": [["M", [0.0, 0.15625]], ["L", [1.0, 0.15625]], ["L", [1.0, 0.16015625]], ["L", [0.0, 0.16015625]], ["L", [0.0, 0.15625]]], "fc": "#0020FF"}, {"p": [["M", [0.0, 0.16015625]], ["L", [1.0, 0.16015625]], ["L", [1.0, 0.1640625]], ["L", [0.0, 0.1640625]], ["L", [0.0, 0.16015625]]], "fc": "#0024FF"}, {"p": [["M", [0.0, 0.1640625]], ["L", [1.0, 0.1640625]], ["L", [1.0, 0.16796875]], ["L", [0.0, 0.16796875]], ["L", [0.0, 0.1640625]]], "fc": "#0028FF"}, {"p": [["M", [0.0, 0.16796875]], ["L", [1.0, 0.16796875]], ["L", [1.0, 0.171875]], ["L", [0.0, 0.171875]], ["L", [0.0, 0.16796875]]], "fc": "#002CFF"}, {"p": [["M", [0.0, 0.171875]], ["L", [1.0, 0.171875]], ["L", [1.0, 0.17578125]], ["L", [0.0, 0.17578125]], ["L", [0.0, 0.171875]]], "fc": "#0030FF"}, {"p": [["M", [0.0, 0.17578125]], ["L", [1.0, 0.17578125]], ["L", [1.0, 0.1796875]], ["L", [0.0, 0.1796875]], ["L", [0.0, 0.17578125]]], "fc": "#0034FF"}, {"p": [["M", [0.0, 0.1796875]], ["L", [1.0, 0.1796875]], ["L", [1.0, 0.18359375]], ["L", [0.0, 0.18359375]], ["L", [0.0, 0.1796875]]], "fc": "#0038FF"}, {"p": [["M", [0.0, 0.18359375]], ["L", [1.0, 0.18359375]], ["L", [1.0, 0.1875]], ["L", [0.0, 0.1875]], ["L", [0.0, 0.18359375]]], "fc": "#003CFF"}, {"p": [["M", [0.0, 0.1875]], ["L", [1.0, 0.1875]], ["L", [1.0, 0.19140625]], ["L", [0.0, 0.19140625]], ["L", [0.0, 0.1875]]], "fc": "#0040FF"}, {"p": [["M", [0.0, 0.19140625]], ["L", [1.0, 0.19140625]], ["L", [1.0, 0.1953125]], ["L", [0.0, 0.1953125]], ["L", [0.0, 0.19140625]]], "fc": "#0044FF"}, {"p": [["M", [0.0, 0.1953125]], ["L", [1.0, 0.1953125]], ["L", [1.0, 0.19921875]], ["L", [0.0, 0.19921875]], ["L", [0.0, 0.1953125]]], "fc": "#0048FF"}, {"p": [["M", [0.0, 0.19921875]], ["L", [1.0, 0.19921875]], ["L", [1.0, 0.203125]], ["L", [0.0, 0.203125]], ["L", [0.0, 0.19921875]]], "fc": "#004CFF"}, {"p": [["M", [0.0, 0.203125]], ["L", [1.0, 0.203125]], ["L", [1.0, 0.20703125]], ["L", [0.0, 0.20703125]], ["L", [0.0, 0.203125]]], "fc": "#0050FF"}, {"p": [["M", [0.0, 0.20703125]], ["L", [1.0, 0.20703125]], ["L", [1.0, 0.2109375]], ["L", [0.0, 0.2109375]], ["L", [0.0, 0.20703125]]], "fc": "#0054FF"}, {"p": [["M", [0.0, 0.2109375]], ["L", [1.0, 0.2109375]], ["L", [1.0, 0.21484375]], ["L", [0.0, 0.21484375]], ["L", [0.0, 0.2109375]]], "fc": "#0058FF"}, {"p": [["M", [0.0, 0.21484375]], ["L", [1.0, 0.21484375]], ["L", [1.0, 0.21875]], ["L", [0.0, 0.21875]], ["L", [0.0, 0.21484375]]], "fc": "#005CFF"}, {"p": [["M", [0.0, 0.21875]], ["L", [1.0, 0.21875]], ["L", [1.0, 0.22265625]], ["L", [0.0, 0.22265625]], ["L", [0.0, 0.21875]]], "fc": "#0060FF"}, {"p": [["M", [0.0, 0.22265625]], ["L", [1.0, 0.22265625]], ["L", [1.0, 0.2265625]], ["L", [0.0, 0.2265625]], ["L", [0.0, 0.22265625]]], "fc": "#0064FF"}, {"p": [["M", [0.0, 0.2265625]], ["L", [1.0, 0.2265625]], ["L", [1.0, 0.23046875]], ["L", [0.0, 0.23046875]], ["L", [0.0, 0.2265625]]], "fc": "#0068FF"}, {"p": [["M", [0.0, 0.23046875]], ["L", [1.0, 0.23046875]], ["L", [1.0, 0.234375]], ["L", [0.0, 0.234375]], ["L", [0.0, 0.23046875]]], "fc": "#006CFF"}, {"p": [["M", [0.0, 0.234375]], ["L", [1.0, 0.234375]], ["L", [1.0, 0.23828125]], ["L", [0.0, 0.23828125]], ["L", [0.0, 0.234375]]], "fc": "#0070FF"}, {"p": [["M", [0.0, 0.23828125]], ["L", [1.0, 0.23828125]], ["L", [1.0, 0.2421875]], ["L", [0.0, 0.2421875]], ["L", [0.0, 0.23828125]]], "fc": "#0074FF"}, {"p": [["M", [0.0, 0.2421875]], ["L", [1.0, 0.2421875]], ["L", [1.0, 0.24609375]], ["L", [0.0, 0.24609375]], ["L", [0.0, 0.2421875]]], "fc": "#0078FF"}, {"p": [["M", [0.0, 0.24609375]], ["L", [1.0, 0.24609375]], ["L", [1.0, 0.25]], ["L", [0.0, 0.25]], ["L", [0.0, 0.24609375]]], "fc": "#007CFF"}, {"p": [["M", [0.0, 0.25]], ["L", [1.0, 0.25]], ["L", [1.0, 0.25390625]], ["L", [0.0, 0.25390625]], ["L", [0.0, 0.25]]], "fc": "#0080FF"}, {"p": [["M", [0.0, 0.25390625]], ["L", [1.0, 0.25390625]], ["L", [1.0, 0.2578125]], ["L", [0.0, 0.2578125]], ["L", [0.0, 0.25390625]]], "fc": "#0084FF"}, {"p": [["M", [0.0, 0.2578125]], ["L", [1.0, 0.2578125]], ["L", [1.0, 0.26171875]], ["L", [0.0, 0.26171875]], ["L", [0.0, 0.2578125]]], "fc": "#0088FF"}, {"p": [["M", [0.0, 0.26171875]], ["L", [1.0, 0.26171875]], ["L", [1.0, 0.265625]], ["L", [0.0, 0.265625]], ["L", [0.0, 0.26171875]]], "fc": "#008CFF"}, {"p": [["M", [0.0, 0.265625]], ["L", [1.0, 0.265625]], ["L", [1.0, 0.26953125]], ["L", [0.0, 0.26953125]], ["L", [0.0, 0.265625]]], "fc": "#0090FF"}, {"p": [["M", [0.0, 0.26953125]], ["L", [1.0, 0.26953125]], ["L", [1.0, 0.2734375]], ["L", [0.0, 0.2734375]], ["L", [0.0, 0.26953125]]], "fc": "#0094FF"}, {"p": [["M", [0.0, 0.2734375]], ["L", [1.0, 0.2734375]], ["L", [1.0, 0.27734375]], ["L", [0.0, 0.27734375]], ["L", [0.0, 0.2734375]]], "fc": "#0098FF"}, {"p": [["M", [0.0, 0.27734375]], ["L", [1.0, 0.27734375]], ["L", [1.0, 0.28125]], ["L", [0.0, 0.28125]], ["L", [0.0, 0.27734375]]], "fc": "#009CFF"}, {"p": [["M", [0.0, 0.28125]], ["L", [1.0, 0.28125]], ["L", [1.0, 0.28515625]], ["L", [0.0, 0.28515625]], ["L", [0.0, 0.28125]]], "fc": "#00A0FF"}, {"p": [["M", [0.0, 0.28515625]], ["L", [1.0, 0.28515625]], ["L", [1.0, 0.2890625]], ["L", [0.0, 0.2890625]], ["L", [0.0, 0.28515625]]], "fc": "#00A4FF"}, {"p": [["M", [0.0, 0.2890625]], ["L", [1.0, 0.2890625]], ["L", [1.0, 0.29296875]], ["L", [0.0, 0.29296875]], ["L", [0.0, 0.2890625]]], "fc": "#00A8FF"}, {"p": [["M", [0.0, 0.29296875]], ["L", [1.0, 0.29296875]], ["L", [1.0, 0.296875]], ["L", [0.0, 0.296875]], ["L", [0.0, 0.29296875]]], "fc": "#00ACFF"}, {"p": [["M", [0.0, 0.296875]], ["L", [1.0, 0.296875]], ["L", [1.0, 0.30078125]], ["L", [0.0, 0.30078125]], ["L", [0.0, 0.296875]]], "fc": "#00B0FF"}, {"p": [["M", [0.0, 0.30078125]], ["L", [1.0, 0.30078125]], ["L", [1.0, 0.3046875]], ["L", [0.0, 0.3046875]], ["L", [0.0, 0.30078125]]], "fc": "#00B4FF"}, {"p": [["M", [0.0, 0.3046875]], ["L", [1.0, 0.3046875]], ["L", [1.0, 0.30859375]], ["L", [0.0, 0.30859375]], ["L", [0.0, 0.3046875]]], "fc": "#00B8FF"}, {"p": [["M", [0.0, 0.30859375]], ["L", [1.0, 0.30859375]], ["L", [1.0, 0.3125]], ["L", [0.0, 0.3125]], ["L", [0.0, 0.30859375]]], "fc": "#00BCFF"}, {"p": [["M", [0.0, 0.3125]], ["L", [1.0, 0.3125]], ["L", [1.0, 0.31640625]], ["L", [0.0, 0.31640625]], ["L", [0.0, 0.3125]]], "fc": "#00C0FF"}, {"p": [["M", [0.0, 0.31640625]], ["L", [1.0, 0.31640625]], ["L", [1.0, 0.3203125]], ["L", [0.0, 0.3203125]], ["L", [0.0, 0.31640625]]], "fc": "#00C4FF"}, {"p": [["M", [0.0, 0.3203125]], ["L", [1.0, 0.3203125]], ["L", [1.0, 0.32421875]], ["L", [0.0, 0.32421875]], ["L", [0.0, 0.3203125]]], "fc": "#00C8FF"}, {"p": [["M", [0.0, 0.32421875]], ["L", [1.0, 0.32421875]], ["L", [1.0, 0.328125]], ["L", [0.0, 0.328125]], ["L", [0.0, 0.32421875]]], "fc": "#00CCFF"}, {"p": [["M", [0.0, 0.328125]], ["L", [1.0, 0.328125]], ["L", [1.0, 0.33203125]], ["L", [0.0, 0.33203125]], ["L", [0.0, 0.328125]]], "fc": "#00D0FF"}, {"p": [["M", [0.0, 0.33203125]], ["L", [1.0, 0.33203125]], ["L", [1.0, 0.3359375]], ["L", [0.0, 0.3359375]], ["L", [0.0, 0.33203125]]], "fc": "#00D4FF"}, {"p": [["M", [0.0, 0.3359375]], ["L", [1.0, 0.3359375]], ["L", [1.0, 0.33984375]], ["L", [0.0, 0.33984375]], ["L", [0.0, 0.3359375]]], "fc": "#00D8FF"}, {"p": [["M", [0.0, 0.33984375]], ["L", [1.0, 0.33984375]], ["L", [1.0, 0.34375]], ["L", [0.0, 0.34375]], ["L", [0.0, 0.33984375]]], "fc": "#00DCFE"}, {"p": [["M", [0.0, 0.34375]], ["L", [1.0, 0.34375]], ["L", [1.0, 0.34765625]], ["L", [0.0, 0.34765625]], ["L", [0.0, 0.34375]]], "fc": "#00E0FA"}, {"p": [["M", [0.0, 0.34765625]], ["L", [1.0, 0.34765625]], ["L", [1.0, 0.3515625]], ["L", [0.0, 0.3515625]], ["L", [0.0, 0.34765625]]], "fc": "#00E4F7"}, {"p": [["M", [0.0, 0.3515625]], ["L", [1.0, 0.3515625]], ["L", [1.0, 0.35546875]], ["L", [0.0, 0.35546875]], ["L", [0.0, 0.3515625]]], "fc": "#02E8F4"}, {"p": [["M", [0.0, 0.35546875]], ["L", [1.0, 0.35546875]], ["L", [1.0, 0.359375]], ["L", [0.0, 0.359375]], ["L", [0.0, 0.35546875]]], "fc": "#05ECF1"}, {"p": [["M", [0.0, 0.359375]], ["L", [1.0, 0.359375]], ["L", [1.0, 0.36328125]], ["L", [0.0, 0.36328125]], ["L", [0.0, 0.359375]]], "fc": "#08F0ED"}, {"p": [["M", [0.0, 0.36328125]], ["L", [1.0, 0.36328125]], ["L", [1.0, 0.3671875]], ["L", [0.0, 0.3671875]], ["L", [0.0, 0.36328125]]], "fc": "#0CF4EA"}, {"p": [["M", [0.0, 0.3671875]], ["L", [1.0, 0.3671875]], ["L", [1.0, 0.37109375]], ["L", [0.0, 0.37109375]], ["L", [0.0, 0.3671875]]], "fc": "#0FF8E7"}, {"p": [["M", [0.0, 0.37109375]], ["L", [1.0, 0.37109375]], ["L", [1.0, 0.375]], ["L", [0.0, 0.375]], ["L", [0.0, 0.37109375]]], "fc": "#12FCE4"}, {"p": [["M", [0.0, 0.375]], ["L", [1.0, 0.375]], ["L", [1.0, 0.37890625]], ["L", [0.0, 0.37890625]], ["L", [0.0, 0.375]]], "fc": "#15FFE1"}, {"p": [["M", [0.0, 0.37890625]], ["L", [1.0, 0.37890625]], ["L", [1.0, 0.3828125]], ["L", [0.0, 0.3828125]], ["L", [0.0, 0.37890625]]], "fc": "#18FFDD"}, {"p": [["M", [0.0, 0.3828125]], ["L", [1.0, 0.3828125]], ["L", [1.0, 0.38671875]], ["L", [0.0, 0.38671875]], ["L", [0.0, 0.3828125]]], "fc": "#1CFFDA"}, {"p": [["M", [0.0, 0.38671875]], ["L", [1.0, 0.38671875]], ["L", [1.0, 0.390625]], ["L", [0.0, 0.390625]], ["L", [0.0, 0.38671875]]], "fc": "#1FFFD7"}, {"p": [["M", [0.0, 0.390625]], ["L", [1.0, 0.390625]], ["L", [1.0, 0.39453125]], ["L", [0.0, 0.39453125]], ["L", [0.0, 0.390625]]], "fc": "#22FFD4"}, {"p": [["M", [0.0, 0.39453125]], ["L", [1.0, 0.39453125]], ["L", [1.0, 0.3984375]], ["L", [0.0, 0.3984375]], ["L", [0.0, 0.39453125]]], "fc": "#25FFD0"}, {"p": [["M", [0.0, 0.3984375]], ["L", [1.0, 0.3984375]], ["L", [1.0, 0.40234375]], ["L", [0.0, 0.40234375]], ["L", [0.0, 0.3984375]]], "fc": "#29FFCD"}, {"p": [["M", [0.0, 0.40234375]], ["L", [1.0, 0.40234375]], ["L", [1.0, 0.40625]], ["L", [0.0, 0.40625]], ["L", [0.0, 0.40234375]]], "fc": "#2CFFCA"}, {"p": [["M", [0.0, 0.40625]], ["L", [1.0, 0.40625]], ["L", [1.0, 0.41015625]], ["L", [0.0, 0.41015625]], ["L", [0.0, 0.40625]]], "fc": "#2FFFC7"}, {"p": [["M", [0.0, 0.41015625]], ["L", [1.0, 0.41015625]], ["L", [1.0, 0.4140625]], ["L", [0.0, 0.4140625]], ["L", [0.0, 0.41015625]]], "fc": "#32FFC3"}, {"p": [["M", [0.0, 0.4140625]], ["L", [1.0, 0.4140625]], ["L", [1.0, 0.41796875]], ["L", [0.0, 0.41796875]], ["L", [0.0, 0.4140625]]], "fc": "#36FFC0"}, {"p": [["M", [0.0, 0.41796875]], ["L", [1.0, 0.41796875]], ["L", [1.0, 0.421875]], ["L", [0.0, 0.421875]], ["L", [0.0, 0.41796875]]], "fc": "#39FFBD"}, {"p": [["M", [0.0, 0.421875]], ["L", [1.0, 0.421875]], ["L", [1.0, 0.42578125]], ["L", [0.0, 0.42578125]], ["L", [0.0, 0.421875]]], "fc": "#3CFFBA"}, {"p": [["M", [0.0, 0.42578125]], ["L", [1.0, 0.42578125]], ["L", [1.0, 0.4296875]], ["L", [0.0, 0.4296875]], ["L", [0.0, 0.42578125]]], "fc": "#3FFFB7"}, {"p": [["M", [0.0, 0.4296875]], ["L", [1.0, 0.4296875]], ["L", [1.0, 0.43359375]], ["L", [0.0, 0.43359375]], ["L", [0.0, 0.4296875]]], "fc": "#42FFB3"}, {"p": [["M", [0.0, 0.43359375]], ["L", [1.0, 0.43359375]], ["L", [1.0, 0.4375]], ["L", [0.0, 0.4375]], ["L", [0.0, 0.43359375]]], "fc": "#46FFB0"}, {"p": [["M", [0.0, 0.4375]], ["L", [1.0, 0.4375]], ["L", [1.0, 0.44140625]], ["L", [0.0, 0.44140625]], ["L", [0.0, 0.4375]]], "fc": "#49FFAD"}, {"p": [["M", [0.0, 0.44140625]], ["L", [1.0, 0.44140625]], ["L", [1.0, 0.4453125]], ["L", [0.0, 0.4453125]], ["L", [0.0, 0.44140625]]], "fc": "#4CFFAA"}, {"p": [["M", [0.0, 0.4453125]], ["L", [1.0, 0.4453125]], ["L", [1.0, 0.44921875]], ["L", [0.0, 0.44921875]], ["L", [0.0, 0.4453125]]], "fc": "#4FFFA6"}, {"p": [["M", [0.0, 0.44921875]], ["L", [1.0, 0.44921875]], ["L", [1.0, 0.453125]], ["L", [0.0, 0.453125]], ["L", [0.0, 0.44921875]]], "fc": "#53FFA3"}, {"p": [["M", [0.0, 0.453125]], ["L", [1.0, 0.453125]], ["L", [1.0, 0.45703125]], ["L", [0.0, 0.45703125]], ["L", [0.0, 0.453125]]], "fc": "#56FFA0"}, {"p": [["M", [0.0, 0.45703125]], ["L", [1.0, 0.45703125]], ["L", [1.0, 0.4609375]], ["L", [0.0, 0.4609375]], ["L", [0.0, 0.45703125]]], "fc": "#59FF9D"}, {"p": [["M", [0.0, 0.4609375]], ["L", [1.0, 0.4609375]], ["L", [1.0, 0.46484375]], ["L", [0.0, 0.46484375]], ["L", [0.0, 0.4609375]]], "fc": "#5CFF9A"}, {"p": [["M", [0.0, 0.46484375]], ["L", [1.0, 0.46484375]], ["L", [1.0, 0.46875]], ["L", [0.0, 0.46875]], ["L", [0.0, 0.46484375]]], "fc": "#5FFF96"}, {"p": [["M", [0.0, 0.46875]], ["L", [1.0, 0.46875]], ["L", [1.0, 0.47265625]], ["L", [0.0, 0.47265625]], ["L", [0.0, 0.46875]]], "fc": "#63FF93"}, {"p": [["M", [0.0, 0.47265625]], ["L", [1.0, 0.47265625]], ["L", [1.0, 0.4765625]], ["L", [0.0, 0.4765625]], ["L", [0.0, 0.47265625]]], "fc": "#66FF90"}, {"p": [["M", [0.0, 0.4765625]], ["L", [1.0, 0.4765625]], ["L", [1.0, 0.48046875]], ["L", [0.0, 0.48046875]], ["L", [0.0, 0.4765625]]], "fc": "#69FF8D"}, {"p": [["M", [0.0, 0.48046875]], ["L", [1.0, 0.48046875]], ["L", [1.0, 0.484375]], ["L", [0.0, 0.484375]], ["L", [0.0, 0.48046875]]], "fc": "#6CFF89"}, {"p": [["M", [0.0, 0.484375]], ["L", [1.0, 0.484375]], ["L", [1.0, 0.48828125]], ["L", [0.0, 0.48828125]], ["L", [0.0, 0.484375]]], "fc": "#70FF86"}, {"p": [["M", [0.0, 0.48828125]], ["L", [1.0, 0.48828125]], ["L", [1.0, 0.4921875]], ["L", [0.0, 0.4921875]], ["L", [0.0, 0.48828125]]], "fc": "#73FF83"}, {"p": [["M", [0.0, 0.4921875]], ["L", [1.0, 0.4921875]], ["L", [1.0, 0.49609375]], ["L", [0.0, 0.49609375]], ["L", [0.0, 0.4921875]]], "fc": "#76FF80"}, {"p": [["M", [0.0, 0.49609375]], ["L", [1.0, 0.49609375]], ["L", [1.0, 0.5]], ["L", [0.0, 0.5]], ["L", [0.0, 0.49609375]]], "fc": "#79FF7D"}, {"p": [["M", [0.0, 0.5]], ["L", [1.0, 0.5]], ["L", [1.0, 0.50390625]], ["L", [0.0, 0.50390625]], ["L", [0.0, 0.5]]], "fc": "#7CFF79"}, {"p": [["M", [0.0, 0.50390625]], ["L", [1.0, 0.50390625]], ["L", [1.0, 0.5078125]], ["L", [0.0, 0.5078125]], ["L", [0.0, 0.50390625]]], "fc": "#80FF76"}, {"p": [["M", [0.0, 0.5078125]], ["L", [1.0, 0.5078125]], ["L", [1.0, 0.51171875]], ["L", [0.0, 0.51171875]], ["L", [0.0, 0.5078125]]], "fc": "#83FF73"}, {"p": [["M", [0.0, 0.51171875]], ["L", [1.0, 0.51171875]], ["L", [1.0, 0.515625]], ["L", [0.0, 0.515625]], ["L", [0.0, 0.51171875]]], "fc": "#86FF70"}, {"p": [["M", [0.0, 0.515625]], ["L", [1.0, 0.515625]], ["L", [1.0, 0.51953125]], ["L", [0.0, 0.51953125]], ["L", [0.0, 0.515625]]], "fc": "#89FF6C"}, {"p": [["M", [0.0, 0.51953125]], ["L", [1.0, 0.51953125]], ["L", [1.0, 0.5234375]], ["L", [0.0, 0.5234375]], ["L", [0.0, 0.51953125]]], "fc": "#8DFF69"}, {"p": [["M", [0.0, 0.5234375]], ["L", [1.0, 0.5234375]], ["L", [1.0, 0.52734375]], ["L", [0.0, 0.52734375]], ["L", [0.0, 0.5234375]]], "fc": "#90FF66"}, {"p": [["M", [0.0, 0.52734375]], ["L", [1.0, 0.52734375]], ["L", [1.0, 0.53125]], ["L", [0.0, 0.53125]], ["L", [0.0, 0.52734375]]], "fc": "#93FF63"}, {"p": [["M", [0.0, 0.53125]], ["L", [1.0, 0.53125]], ["L", [1.0, 0.53515625]], ["L", [0.0, 0.53515625]], ["L", [0.0, 0.53125]]], "fc": "#96FF5F"}, {"p": [["M", [0.0, 0.53515625]], ["L", [1.0, 0.53515625]], ["L", [1.0, 0.5390625]], ["L", [0.0, 0.5390625]], ["L", [0.0, 0.53515625]]], "fc": "#9AFF5C"}, {"p": [["M", [0.0, 0.5390625]], ["L", [1.0, 0.5390625]], ["L", [1.0, 0.54296875]], ["L", [0.0, 0.54296875]], ["L", [0.0, 0.5390625]]], "fc": "#9DFF59"}, {"p": [["M", [0.0, 0.54296875]], ["L", [1.0, 0.54296875]], ["L", [1.0, 0.546875]], ["L", [0.0, 0.546875]], ["L", [0.0, 0.54296875]]], "fc": "#A0FF56"}, {"p": [["M", [0.0, 0.546875]], ["L", [1.0, 0.546875]], ["L", [1.0, 0.55078125]], ["L", [0.0, 0.55078125]], ["L", [0.0, 0.546875]]], "fc": "#A3FF53"}, {"p": [["M", [0.0, 0.55078125]], ["L", [1.0, 0.55078125]], ["L", [1.0, 0.5546875]], ["L", [0.0, 0.5546875]], ["L", [0.0, 0.55078125]]], "fc": "#A6FF4F"}, {"p": [["M", [0.0, 0.5546875]], ["L", [1.0, 0.5546875]], ["L", [1.0, 0.55859375]], ["L", [0.0, 0.55859375]], ["L", [0.0, 0.5546875]]], "fc": "#AAFF4C"}, {"p": [["M", [0.0, 0.55859375]], ["L", [1.0, 0.55859375]], ["L", [1.0, 0.5625]], ["L", [0.0, 0.5625]], ["L", [0.0, 0.55859375]]], "fc": "#ADFF49"}, {"p": [["M", [0.0, 0.5625]], ["L", [1.0, 0.5625]], ["L", [1.0, 0.56640625]], ["L", [0.0, 0.56640625]], ["L", [0.0, 0.5625]]], "fc": "#B0FF46"}, {"p": [["M", [0.0, 0.56640625]], ["L", [1.0, 0.56640625]], ["L", [1.0, 0.5703125]], ["L", [0.0, 0.5703125]], ["L", [0.0, 0.56640625]]], "fc": "#B3FF42"}, {"p": [["M", [0.0, 0.5703125]], ["L", [1.0, 0.5703125]], ["L", [1.0, 0.57421875]], ["L", [0.0, 0.57421875]], ["L", [0.0, 0.5703125]]], "fc": "#B7FF3F"}, {"p": [["M", [0.0, 0.57421875]], ["L", [1.0, 0.57421875]], ["L", [1.0, 0.578125]], ["L", [0.0, 0.578125]], ["L", [0.0, 0.57421875]]], "fc": "#BAFF3C"}, {"p": [["M", [0.0, 0.578125]], ["L", [1.0, 0.578125]], ["L", [1.0, 0.58203125]], ["L", [0.0, 0.58203125]], ["L", [0.0, 0.578125]]], "fc": "#BDFF39"}, {"p": [["M", [0.0, 0.58203125]], ["L", [1.0, 0.58203125]], ["L", [1.0, 0.5859375]], ["L", [0.0, 0.5859375]], ["L", [0.0, 0.58203125]]], "fc": "#C0FF36"}, {"p": [["M", [0.0, 0.5859375]], ["L", [1.0, 0.5859375]], ["L", [1.0, 0.58984375]], ["L", [0.0, 0.58984375]], ["L", [0.0, 0.5859375]]], "fc": "#C3FF32"}, {"p": [["M", [0.0, 0.58984375]], ["L", [1.0, 0.58984375]], ["L", [1.0, 0.59375]], ["L", [0.0, 0.59375]], ["L", [0.0, 0.58984375]]], "fc": "#C7FF2F"}, {"p": [["M", [0.0, 0.59375]], ["L", [1.0, 0.59375]], ["L", [1.0, 0.59765625]], ["L", [0.0, 0.59765625]], ["L", [0.0, 0.59375]]], "fc": "#CAFF2C"}, {"p": [["M", [0.0, 0.59765625]], ["L", [1.0, 0.59765625]], ["L", [1.0, 0.6015625]], ["L", [0.0, 0.6015625]], ["L", [0.0, 0.59765625]]], "fc": "#CDFF29"}, {"p": [["M", [0.0, 0.6015625]], ["L", [1.0, 0.6015625]], ["L", [1.0, 0.60546875]], ["L", [0.0, 0.60546875]], ["L", [0.0, 0.6015625]]], "fc": "#D0FF25"}, {"p": [["M", [0.0, 0.60546875]], ["L", [1.0, 0.60546875]], ["L", [1.0, 0.609375]], ["L", [0.0, 0.609375]], ["L", [0.0, 0.60546875]]], "fc": "#D4FF22"}, {"p": [["M", [0.0, 0.609375]], ["L", [1.0, 0.609375]], ["L", [1.0, 0.61328125]], ["L", [0.0, 0.61328125]], ["L", [0.0, 0.609375]]], "fc": "#D7FF1F"}, {"p": [["M", [0.0, 0.61328125]], ["L", [1.0, 0.61328125]], ["L", [1.0, 0.6171875]], ["L", [0.0, 0.6171875]], ["L", [0.0, 0.61328125]]], "fc": "#DAFF1C"}, {"p": [["M", [0.0, 0.6171875]], ["L", [1.0, 0.6171875]], ["L", [1.0, 0.62109375]], ["L", [0.0, 0.62109375]], ["L", [0.0, 0.6171875]]], "fc": "#DDFF18"}, {"p": [["M", [0.0, 0.62109375]], ["L", [1.0, 0.62109375]], ["L", [1.0, 0.625]], ["L", [0.0, 0.625]], ["L", [0.0, 0.62109375]]], "fc": "#E0FF15"}, {"p": [["M", [0.0, 0.625]], ["L", [1.0, 0.625]], ["L", [1.0, 0.62890625]], ["L", [0.0, 0.62890625]], ["L", [0.0, 0.625]]], "fc": "#E4FF12"}, {"p": [["M", [0.0, 0.62890625]], ["L", [1.0, 0.62890625]], ["L", [1.0, 0.6328125]], ["L", [0.0, 0.6328125]], ["L", [0.0, 0.62890625]]], "fc": "#E7FF0F"}, {"p": [["M", [0.0, 0.6328125]], ["L", [1.0, 0.6328125]], ["L", [1.0, 0.63671875]], ["L", [0.0, 0.63671875]], ["L", [0.0, 0.6328125]]], "fc": "#EAFF0C"}, {"p": [["M", [0.0, 0.63671875]], ["L", [1.0, 0.63671875]], ["L", [1.0, 0.640625]], ["L", [0.0, 0.640625]], ["L", [0.0, 0.63671875]]], "fc": "#EDFF08"}, {"p": [["M", [0.0, 0.640625]], ["L", [1.0, 0.640625]], ["L", [1.0, 0.64453125]], ["L", [0.0, 0.64453125]], ["L", [0.0, 0.640625]]], "fc": "#F1FC05"}, {"p": [["M", [0.0, 0.64453125]], ["L", [1.0, 0.64453125]], ["L", [1.0, 0.6484375]], ["L", [0.0, 0.6484375]], ["L", [0.0, 0.64453125]]], "fc": "#F4F802"}, {"p": [["M", [0.0, 0.6484375]], ["L", [1.0, 0.6484375]], ["L", [1.0, 0.65234375]], ["L", [0.0, 0.65234375]], ["L", [0.0, 0.6484375]]], "fc": "#F7F400"}, {"p": [["M", [0.0, 0.65234375]], ["L", [1.0, 0.65234375]], ["L", [1.0, 0.65625]], ["L", [0.0, 0.65625]], ["L", [0.0, 0.65234375]]], "fc": "#FAF000"}, {"p": [["M", [0.0, 0.65625]], ["L", [1.0, 0.65625]], ["L", [1.0, 0.66015625]], ["L", [0.0, 0.66015625]], ["L", [0.0, 0.65625]]], "fc": "#FEED00"}, {"p": [["M", [0.0, 0.66015625]], ["L", [1.0, 0.66015625]], ["L", [1.0, 0.6640625]], ["L", [0.0, 0.6640625]], ["L", [0.0, 0.66015625]]], "fc": "#FFE900"}, {"p": [["M", [0.0, 0.6640625]], ["L", [1.0, 0.6640625]], ["L", [1.0, 0.66796875]], ["L", [0.0, 0.66796875]], ["L", [0.0, 0.6640625]]], "fc": "#FFE500"}, {"p": [["M", [0.0, 0.66796875]], ["L", [1.0, 0.66796875]], ["L", [1.0, 0.671875]], ["L", [0.0, 0.671875]], ["L", [0.0, 0.66796875]]], "fc": "#FFE200"}, {"p": [["M", [0.0, 0.671875]], ["L", [1.0, 0.671875]], ["L", [1.0, 0.67578125]], ["L", [0.0, 0.67578125]], ["L", [0.0, 0.671875]]], "fc": "#FFDE00"}, {"p": [["M", [0.0, 0.67578125]], ["L", [1.0, 0.67578125]], ["L", [1.0, 0.6796875]], ["L", [0.0, 0.6796875]], ["L", [0.0, 0.67578125]]], "fc": "#FFDA00"}, {"p": [["M", [0.0, 0.6796875]], ["L", [1.0, 0.6796875]], ["L", [1.0, 0.68359375]], ["L", [0.0, 0.68359375]], ["L", [0.0, 0.6796875]]], "fc": "#FFD700"}, {"p": [["M", [0.0, 0.68359375]], ["L", [1.0, 0.68359375]], ["L", [1.0, 0.6875]], ["L", [0.0, 0.6875]], ["L", [0.0, 0.68359375]]], "fc": "#FFD300"}, {"p": [["M", [0.0, 0.6875]], ["L", [1.0, 0.6875]], ["L", [1.0, 0.69140625]], ["L", [0.0, 0.69140625]], ["L", [0.0, 0.6875]]], "fc": "#FFCF00"}, {"p": [["M", [0.0, 0.69140625]], ["L", [1.0, 0.69140625]], ["L", [1.0, 0.6953125]], ["L", [0.0, 0.6953125]], ["L", [0.0, 0.69140625]]], "fc": "#FFCB00"}, {"p": [["M", [0.0, 0.6953125]], ["L", [1.0, 0.6953125]], ["L", [1.0, 0.69921875]], ["L", [0.0, 0.69921875]], ["L", [0.0, 0.6953125]]], "fc": "#FFC800"}, {"p": [["M", [0.0, 0.69921875]], ["L", [1.0, 0.69921875]], ["L", [1.0, 0.703125]], ["L", [0.0, 0.703125]], ["L", [0.0, 0.69921875]]], "fc": "#FFC400"}, {"p": [["M", [0.0, 0.703125]], ["L", [1.0, 0.703125]], ["L", [1.0, 0.70703125]], ["L", [0.0, 0.70703125]], ["L", [0.0, 0.703125]]], "fc": "#FFC000"}, {"p": [["M", [0.0, 0.70703125]], ["L", [1.0, 0.70703125]], ["L", [1.0, 0.7109375]], ["L", [0.0, 0.7109375]], ["L", [0.0, 0.70703125]]], "fc": "#FFBD00"}, {"p": [["M", [0.0, 0.7109375]], ["L", [1.0, 0.7109375]], ["L", [1.0, 0.71484375]], ["L", [0.0, 0.71484375]], ["L", [0.0, 0.7109375]]], "fc": "#FFB900"}, {"p": [["M", [0.0, 0.71484375]], ["L", [1.0, 0.71484375]], ["L", [1.0, 0.71875]], ["L", [0.0, 0.71875]], ["L", [0.0, 0.71484375]]], "fc": "#FFB500"}, {"p": [["M", [0.0, 0.71875]], ["L", [1.0, 0.71875]], ["L", [1.0, 0.72265625]], ["L", [0.0, 0.72265625]], ["L", [0.0, 0.71875]]], "fc": "#FFB100"}, {"p": [["M", [0.0, 0.72265625]], ["L", [1.0, 0.72265625]], ["L", [1.0, 0.7265625]], ["L", [0.0, 0.7265625]], ["L", [0.0, 0.72265625]]], "fc": "#FFAE00"}, {"p": [["M", [0.0, 0.7265625]], ["L", [1.0, 0.7265625]], ["L", [1.0, 0.73046875]], ["L", [0.0, 0.73046875]], ["L", [0.0, 0.7265625]]], "fc": "#FFAA00"}, {"p": [["M", [0.0, 0.73046875]], ["L", [1.0, 0.73046875]], ["L", [1.0, 0.734375]], ["L", [0.0, 0.734375]], ["L", [0.0, 0.73046875]]], "fc": "#FFA600"}, {"p": [["M", [0.0, 0.734375]], ["L", [1.0, 0.734375]], ["L", [1.0, 0.73828125]], ["L", [0.0, 0.73828125]], ["L", [0.0, 0.734375]]], "fc": "#FFA300"}, {"p": [["M", [0.0, 0.73828125]], ["L", [1.0, 0.73828125]], ["L", [1.0, 0.7421875]], ["L", [0.0, 0.7421875]], ["L", [0.0, 0.73828125]]], "fc": "#FF9F00"}, {"p": [["M", [0.0, 0.7421875]], ["L", [1.0, 0.7421875]], ["L", [1.0, 0.74609375]], ["L", [0.0, 0.74609375]], ["L", [0.0, 0.7421875]]], "fc": "#FF9B00"}, {"p": [["M", [0.0, 0.74609375]], ["L", [1.0, 0.74609375]], ["L", [1.0, 0.75]], ["L", [0.0, 0.75]], ["L", [0.0, 0.74609375]]], "fc": "#FF9800"}, {"p": [["M", [0.0, 0.75]], ["L", [1.0, 0.75]], ["L", [1.0, 0.75390625]], ["L", [0.0, 0.75390625]], ["L", [0.0, 0.75]]], "fc": "#FF9400"}, {"p": [["M", [0.0, 0.75390625]], ["L", [1.0, 0.75390625]], ["L", [1.0, 0.7578125]], ["L", [0.0, 0.7578125]], ["L", [0.0, 0.75390625]]], "fc": "#FF9000"}, {"p": [["M", [0.0, 0.7578125]], ["L", [1.0, 0.7578125]], ["L", [1.0, 0.76171875]], ["L", [0.0, 0.76171875]], ["L", [0.0, 0.7578125]]], "fc": "#FF8C00"}, {"p": [["M", [0.0, 0.76171875]], ["L", [1.0, 0.76171875]], ["L", [1.0, 0.765625]], ["L", [0.0, 0.765625]], ["L", [0.0, 0.76171875]]], "fc": "#FF8900"}, {"p": [["M", [0.0, 0.765625]], ["L", [1.0, 0.765625]], ["L", [1.0, 0.76953125]], ["L", [0.0, 0.76953125]], ["L", [0.0, 0.765625]]], "fc": "#FF8500"}, {"p": [["M", [0.0, 0.76953125]], ["L", [1.0, 0.76953125]], ["L", [1.0, 0.7734375]], ["L", [0.0, 0.7734375]], ["L", [0.0, 0.76953125]]], "fc": "#FF8100"}, {"p": [["M", [0.0, 0.7734375]], ["L", [1.0, 0.7734375]], ["L", [1.0, 0.77734375]], ["L", [0.0, 0.77734375]], ["L", [0.0, 0.7734375]]], "fc": "#FF7E00"}, {"p": [["M", [0.0, 0.77734375]], ["L", [1.0, 0.77734375]], ["L", [1.0, 0.78125]], ["L", [0.0, 0.78125]], ["L", [0.0, 0.77734375]]], "fc": "#FF7A00"}, {"p": [["M", [0.0, 0.78125]], ["L", [1.0, 0.78125]], ["L", [1.0, 0.78515625]], ["L", [0.0, 0.78515625]], ["L", [0.0, 0.78125]]], "fc": "#FF7600"}, {"p": [["M", [0.0, 0.78515625]], ["L", [1.0, 0.78515625]], ["L", [1.0, 0.7890625]], ["L", [0.0, 0.7890625]], ["L", [0.0, 0.78515625]]], "fc": "#FF7300"}, {"p": [["M", [0.0, 0.7890625]], ["L", [1.0, 0.7890625]], ["L", [1.0, 0.79296875]], ["L", [0.0, 0.79296875]], ["L", [0.0, 0.7890625]]], "fc": "#FF6F00"}, {"p": [["M", [0.0, 0.79296875]], ["L", [1.0, 0.79296875]], ["L", [1.0, 0.796875]], ["L", [0.0, 0.796875]], ["L", [0.0, 0.79296875]]], "fc": "#FF6B00"}, {"p": [["M", [0.0, 0.796875]], ["L", [1.0, 0.796875]], ["L", [1.0, 0.80078125]], ["L", [0.0, 0.80078125]], ["L", [0.0, 0.796875]]], "fc": "#FF6700"}, {"p": [["M", [0.0, 0.80078125]], ["L", [1.0, 0.80078125]], ["L", [1.0, 0.8046875]], ["L", [0.0, 0.8046875]], ["L", [0.0, 0.80078125]]], "fc": "#FF6400"}, {"p": [["M", [0.0, 0.8046875]], ["L", [1.0, 0.8046875]], ["L", [1.0, 0.80859375]], ["L", [0.0, 0.80859375]], ["L", [0.0, 0.8046875]]], "fc": "#FF6000"}, {"p": [["M", [0.0, 0.80859375]], ["L", [1.0, 0.80859375]], ["L", [1.0, 0.8125]], ["L", [0.0, 0.8125]], ["L", [0.0, 0.80859375]]], "fc": "#FF5C00"}, {"p": [["M", [0.0, 0.8125]], ["L", [1.0, 0.8125]], ["L", [1.0, 0.81640625]], ["L", [0.0, 0.81640625]], ["L", [0.0, 0.8125]]], "fc": "#FF5900"}, {"p": [["M", [0.0, 0.81640625]], ["L", [1.0, 0.81640625]], ["L", [1.0, 0.8203125]], ["L", [0.0, 0.8203125]], ["L", [0.0, 0.81640625]]], "fc": "#FF5500"}, {"p": [["M", [0.0, 0.8203125]], ["L", [1.0, 0.8203125]], ["L", [1.0, 0.82421875]], ["L", [0.0, 0.82421875]], ["L", [0.0, 0.8203125]]], "fc": "#FF5100"}, {"p": [["M", [0.0, 0.82421875]], ["L", [1.0, 0.82421875]], ["L", [1.0, 0.828125]], ["L", [0.0, 0.828125]], ["L", [0.0, 0.82421875]]], "fc": "#FF4D00"}, {"p": [["M", [0.0, 0.828125]], ["L", [1.0, 0.828125]], ["L", [1.0, 0.83203125]], ["L", [0.0, 0.83203125]], ["L", [0.0, 0.828125]]], "fc": "#FF4A00"}, {"p": [["M", [0.0, 0.83203125]], ["L", [1.0, 0.83203125]], ["L", [1.0, 0.8359375]], ["L", [0.0, 0.8359375]], ["L", [0.0, 0.83203125]]], "fc": "#FF4600"}, {"p": [["M", [0.0, 0.8359375]], ["L", [1.0, 0.8359375]], ["L", [1.0, 0.83984375]], ["L", [0.0, 0.83984375]], ["L", [0.0, 0.8359375]]], "fc": "#FF4200"}, {"p": [["M", [0.0, 0.83984375]], ["L", [1.0, 0.83984375]], ["L", [1.0, 0.84375]], ["L", [0.0, 0.84375]], ["L", [0.0, 0.83984375]]], "fc": "#FF3F00"}, {"p": [["M", [0.0, 0.84375]], ["L", [1.0, 0.84375]], ["L", [1.0, 0.84765625]], ["L", [0.0, 0.84765625]], ["L", [0.0, 0.84375]]], "fc": "#FF3B00"}, {"p": [["M", [0.0, 0.84765625]], ["L", [1.0, 0.84765625]], ["L", [1.0, 0.8515625]], ["L", [0.0, 0.8515625]], ["L", [0.0, 0.84765625]]], "fc": "#FF3700"}, {"p": [["M", [0.0, 0.8515625]], ["L", [1.0, 0.8515625]], ["L", [1.0, 0.85546875]], ["L", [0.0, 0.85546875]], ["L", [0.0, 0.8515625]]], "fc": "#FF3400"}, {"p": [["M", [0.0, 0.85546875]], ["L", [1.0, 0.85546875]], ["L", [1.0, 0.859375]], ["L", [0.0, 0.859375]], ["L", [0.0, 0.85546875]]], "fc": "#FF3000"}, {"p": [["M", [0.0, 0.859375]], ["L", [1.0, 0.859375]], ["L", [1.0, 0.86328125]], ["L", [0.0, 0.86328125]], ["L", [0.0, 0.859375]]], "fc": "#FF2C00"}, {"p": [["M", [0.0, 0.86328125]], ["L", [1.0, 0.86328125]], ["L", [1.0, 0.8671875]], ["L", [0.0, 0.8671875]], ["L", [0.0, 0.86328125]]], "fc": "#FF2800"}, {"p": [["M", [0.0, 0.8671875]], ["L", [1.0, 0.8671875]], ["L", [1.0, 0.87109375]], ["L", [0.0, 0.87109375]], ["L", [0.0, 0.8671875]]], "fc": "#FF2500"}, {"p": [["M", [0.0, 0.87109375]], ["L", [1.0, 0.87109375]], ["L", [1.0, 0.875]], ["L", [0.0, 0.875]], ["L", [0.0, 0.87109375]]], "fc": "#FF2100"}, {"p": [["M", [0.0, 0.875]], ["L", [1.0, 0.875]], ["L", [1.0, 0.87890625]], ["L", [0.0, 0.87890625]], ["L", [0.0, 0.875]]], "fc": "#FF1D00"}, {"p": [["M", [0.0, 0.87890625]], ["L", [1.0, 0.87890625]], ["L", [1.0, 0.8828125]], ["L", [0.0, 0.8828125]], ["L", [0.0, 0.87890625]]], "fc": "#FF1A00"}, {"p": [["M", [0.0, 0.8828125]], ["L", [1.0, 0.8828125]], ["L", [1.0, 0.88671875]], ["L", [0.0, 0.88671875]], ["L", [0.0, 0.8828125]]], "fc": "#FF1600"}, {"p": [["M", [0.0, 0.88671875]], ["L", [1.0, 0.88671875]], ["L", [1.0, 0.890625]], ["L", [0.0, 0.890625]], ["L", [0.0, 0.88671875]]], "fc": "#FE1200"}, {"p": [["M", [0.0, 0.890625]], ["L", [1.0, 0.890625]], ["L", [1.0, 0.89453125]], ["L", [0.0, 0.89453125]], ["L", [0.0, 0.890625]]], "fc": "#FA0F00"}, {"p": [["M", [0.0, 0.89453125]], ["L", [1.0, 0.89453125]], ["L", [1.0, 0.8984375]], ["L", [0.0, 0.8984375]], ["L", [0.0, 0.89453125]]], "fc": "#F50B00"}, {"p": [["M", [0.0, 0.8984375]], ["L", [1.0, 0.8984375]], ["L", [1.0, 0.90234375]], ["L", [0.0, 0.90234375]], ["L", [0.0, 0.8984375]]], "fc": "#F10700"}, {"p": [["M", [0.0, 0.90234375]], ["L", [1.0, 0.90234375]], ["L", [1.0, 0.90625]], ["L", [0.0, 0.90625]], ["L", [0.0, 0.90234375]]], "fc": "#EC0300"}, {"p": [["M", [0.0, 0.90625]], ["L", [1.0, 0.90625]], ["L", [1.0, 0.91015625]], ["L", [0.0, 0.91015625]], ["L", [0.0, 0.90625]]], "fc": "#E80000"}, {"p": [["M", [0.0, 0.91015625]], ["L", [1.0, 0.91015625]], ["L", [1.0, 0.9140625]], ["L", [0.0, 0.9140625]], ["L", [0.0, 0.91015625]]], "fc": "#E30000"}, {"p": [["M", [0.0, 0.9140625]], ["L", [1.0, 0.9140625]], ["L", [1.0, 0.91796875]], ["L", [0.0, 0.91796875]], ["L", [0.0, 0.9140625]]], "fc": "#DE0000"}, {"p": [["M", [0.0, 0.91796875]], ["L", [1.0, 0.91796875]], ["L", [1.0, 0.921875]], ["L", [0.0, 0.921875]], ["L", [0.0, 0.91796875]]], "fc": "#DA0000"}, {"p": [["M", [0.0, 0.921875]], ["L", [1.0, 0.921875]], ["L", [1.0, 0.92578125]], ["L", [0.0, 0.92578125]], ["L", [0.0, 0.921875]]], "fc": "#D50000"}, {"p": [["M", [0.0, 0.92578125]], ["L", [1.0, 0.92578125]], ["L", [1.0, 0.9296875]], ["L", [0.0, 0.9296875]], ["L", [0.0, 0.92578125]]], "fc": "#D10000"}, {"p": [["M", [0.0, 0.9296875]], ["L", [1.0, 0.9296875]], ["L", [1.0, 0.93359375]], ["L", [0.0, 0.93359375]], ["L", [0.0, 0.9296875]]], "fc": "#CC0000"}, {"p": [["M", [0.0, 0.93359375]], ["L", [1.0, 0.93359375]], ["L", [1.0, 0.9375]], ["L", [0.0, 0.9375]], ["L", [0.0, 0.93359375]]], "fc": "#C80000"}, {"p": [["M", [0.0, 0.9375]], ["L", [1.0, 0.9375]], ["L", [1.0, 0.94140625]], ["L", [0.0, 0.94140625]], ["L", [0.0, 0.9375]]], "fc": "#C30000"}, {"p": [["M", [0.0, 0.94140625]], ["L", [1.0, 0.94140625]], ["L", [1.0, 0.9453125]], ["L", [0.0, 0.9453125]], ["L", [0.0, 0.94140625]]], "fc": "#BF0000"}, {"p": [["M", [0.0, 0.9453125]], ["L", [1.0, 0.9453125]], ["L", [1.0, 0.94921875]], ["L", [0.0, 0.94921875]], ["L", [0.0, 0.9453125]]], "fc": "#BA0000"}, {"p": [["M", [0.0, 0.94921875]], ["L", [1.0, 0.94921875]], ["L", [1.0, 0.953125]], ["L", [0.0, 0.953125]], ["L", [0.0, 0.94921875]]], "fc": "#B60000"}, {"p": [["M", [0.0, 0.953125]], ["L", [1.0, 0.953125]], ["L", [1.0, 0.95703125]], ["L", [0.0, 0.95703125]], ["L", [0.0, 0.953125]]], "fc": "#B10000"}, {"p": [["M", [0.0, 0.95703125]], ["L", [1.0, 0.95703125]], ["L", [1.0, 0.9609375]], ["L", [0.0, 0.9609375]], ["L", [0.0, 0.95703125]]], "fc": "#AC0000"}, {"p": [["M", [0.0, 0.9609375]], ["L", [1.0, 0.9609375]], ["L", [1.0, 0.96484375]], ["L", [0.0, 0.96484375]], ["L", [0.0, 0.9609375]]], "fc": "#A80000"}, {"p": [["M", [0.0, 0.96484375]], ["L", [1.0, 0.96484375]], ["L", [1.0, 0.96875]], ["L", [0.0, 0.96875]], ["L", [0.0, 0.96484375]]], "fc": "#A30000"}, {"p": [["M", [0.0, 0.96875]], ["L", [1.0, 0.96875]], ["L", [1.0, 0.97265625]], ["L", [0.0, 0.97265625]], ["L", [0.0, 0.96875]]], "fc": "#9F0000"}, {"p": [["M", [0.0, 0.97265625]], ["L", [1.0, 0.97265625]], ["L", [1.0, 0.9765625]], ["L", [0.0, 0.9765625]], ["L", [0.0, 0.97265625]]], "fc": "#9A0000"}, {"p": [["M", [0.0, 0.9765625]], ["L", [1.0, 0.9765625]], ["L", [1.0, 0.98046875]], ["L", [0.0, 0.98046875]], ["L", [0.0, 0.9765625]]], "fc": "#960000"}, {"p": [["M", [0.0, 0.98046875]], ["L", [1.0, 0.98046875]], ["L", [1.0, 0.984375]], ["L", [0.0, 0.984375]], ["L", [0.0, 0.98046875]]], "fc": "#910000"}, {"p": [["M", [0.0, 0.984375]], ["L", [1.0, 0.984375]], ["L", [1.0, 0.98828125]], ["L", [0.0, 0.98828125]], ["L", [0.0, 0.984375]]], "fc": "#8D0000"}, {"p": [["M", [0.0, 0.98828125]], ["L", [1.0, 0.98828125]], ["L", [1.0, 0.9921875]], ["L", [0.0, 0.9921875]], ["L", [0.0, 0.98828125]]], "fc": "#880000"}, {"p": [["M", [0.0, 0.9921875]], ["L", [1.0, 0.9921875]], ["L", [1.0, 0.99609375]], ["L", [0.0, 0.99609375]], ["L", [0.0, 0.9921875]]], "fc": "#840000"}, {"p": [["M", [0.0, 0.99609375]], ["L", [1.0, 0.99609375]], ["L", [1.0, 1.0]], ["L", [0.0, 1.0]], ["L", [0.0, 0.99609375]]], "fc": "#7F0000"}];
    
      this.offset_func = function(d){
         var offset = d.o ? d.o : [0.0, 0.0];
    
         return "translate(" + offset  + ")";
      };
    
      this.path_func = function(d){
         var path = d.p ? d.p : "null";
         var size = d.s ? d.s : 1;
    
           var xscale = function(x){return this.ax.x(size * x);}.bind(this);
           var yscale = function(y){return this.ax.y(size * y);}.bind(this);
    
         return construct_SVG_path(path, xscale, yscale);
      };
    
      this.style_func = function(d){
         var edgecolor = d.ec ? d.ec : "none";
         var facecolor = d.fc ? d.fc : "none";
         var linewidth = d.lw ? d.lw : 1.0;
         var dasharray = d.ls ? d.ls : "10,0";
         return "stroke: " + edgecolor + "; " +
                "stroke-width: " + linewidth + "; " +
                "stroke-dasharray: " + dasharray + "; " +
                "fill: " + facecolor + "; " +
                "stroke-opacity: 1; " +
                "fill-opacity: 1";
      };
    
      this.draw = function(){
        this.g = this.ax.axes.append("svg:g");
    
        this.g.selectAll("paths-3")
          .data(this.data)
          .enter().append("svg:path")
              .attr('class', 'paths3')
              .attr("d", this.path_func.bind(this))
              .attr("style", this.style_func.bind(this))
              .attr("transform", this.offset_func.bind(this));
      };
    
      this.zoomed = function(){
        this.g.selectAll(".paths3")
    
                   .attr("d", this.path_func.bind(this))
    
                 ;
      };
    };
    ax2.add_element(coll277d4938076e405aa06f484ad23725be);
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
          fig.draw();
    
    
    
          return fig
        }
    
        // set a timeout of 0: this makes things work in the IPython notebook
        setTimeout(function(){
          // we need to call the function, making sure d3 is defined appropriately
          if(typeof define === "function" && define.amd){
            // If require.js is available, use it to load d3
            require.config({paths: {d3: "http://d3js.org/d3.v3.min"}});
            require(["d3"], create_figed2931d7b5e04e15aad5f3dc021604dd);
          }else if(typeof d3 === "undefined"){
            // No require.js: dynamically load d3
            var s = document.createElement('script');
            s.src = "http://d3js.org/d3.v3.min.js";
            s.async = true;
            s.onreadystatechange = s.onload = s.onerror = function() {
               if(typeof d3 === "undefined"){
                  document.getElementById("figureed2931d7b5e04e15aad5f3dc021604dd").innerHTML =
                        "<p style='color:red;'>(d3 failed to load)</p>";
               }else{
                  create_figed2931d7b5e04e15aad5f3dc021604dd(d3);
               }
            };
            document.getElementsByTagName("head")[0].appendChild(s);
          }else{
            // d3 is already globally loaded
            create_figed2931d7b5e04e15aad5f3dc021604dd(d3);
          }
        }, 0);
    
        </script>
    
    
    
    

**Python source code:** :download:`[download source: show_image.py]<show_image.py>`

.. literalinclude:: show_image.py
    :lines: 6-
